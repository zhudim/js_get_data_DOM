{"mappings":"ACcA,IAPkC,EAC1B,EACA,EAKF,EAAe,SAAC,CAAtB,EACE,OAAA,EAAO,cAAc,CAAC,QAAS,CAAE,sBAAuB,CAAE,E,EAEtD,EAAoB,SAAC,CAAA,CAAU,CAArC,EACE,IAAM,EAAU,SAAS,aAAa,CAAC,GAEnC,GACF,CAAA,EAAQ,WAAW,CAAG,CADxB,CAGF,EAM2B,GApBnB,EAAe,KAAK,KAAK,CAAC,CAD1B,EAAW,CADe,EAkBR,MAAM,IAAI,CAAC,SAAS,gBAAgB,CAAC,gBAC5D,GAAG,CAAC,SAAC,CADR,EACe,OAAA,EAAG,WAAW,AAC1B,GAAA,GAAG,CAzBkB,SAAC,CAAzB,EACE,MAAA,QAAQ,IAAI,CAAC,EAAK,OAAO,CAAC,KAAM,IAAI,IAAI,IACpC,SAAS,EAAK,OAAO,CAAC,KAAM,IAAI,IAAI,GAAI,IACxC,C,IAGqB,MAAM,CAAC,SAAC,CAAA,CAAK,CAAtC,EAA+C,OAAA,EAAM,CAAM,EAAA,IAChB,EAAQ,MAAM,EAElD,CAAE,MAAO,EAAU,QAAS,CAAa,GAkB1C,EAAmB,EAAnB,KAAA,CAAO,EAAY,EAAZ,OAAf,CAEA,EAAkB,oBAAqB,EAAa,IACpD,EAAkB,sBAAuB,EAAa","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\nvar parsePopulation = function(text) {\n    return /^\\d+$/.test(text.replace(/,/g, '').trim()) ? parseInt(text.replace(/,/g, '').trim(), 10) : 0;\n};\nvar calculateTotalAndAverage = function(numbers) {\n    var totalSum = numbers.reduce(function(acc, curr) {\n        return acc + curr;\n    }, 0);\n    var averageValue = Math.round(totalSum / numbers.length);\n    return {\n        total: totalSum,\n        average: averageValue\n    };\n};\nvar formatNumber = function(number) {\n    return number.toLocaleString('en-US', {\n        maximumFractionDigits: 0\n    });\n};\nvar updateTextContent = function(selector, value) {\n    var element = document.querySelector(selector);\n    if (element) element.textContent = value;\n};\nvar populationNumbers = Array.from(document.querySelectorAll('.population')).map(function(el) {\n    return el.textContent;\n}).map(parsePopulation);\nvar _calculateTotalAndAverage = calculateTotalAndAverage(populationNumbers), total = _calculateTotalAndAverage.total, average = _calculateTotalAndAverage.average;\nupdateTextContent('.total-population', formatNumber(total));\nupdateTextContent('.average-population', formatNumber(average));\n\n//# sourceMappingURL=index.4b95c0a2.js.map\n","'use strict';\n\nconst parsePopulation = (text) =>\n  /^\\d+$/.test(text.replace(/,/g, '').trim())\n    ? parseInt(text.replace(/,/g, '').trim(), 10)\n    : 0;\n\nconst calculateTotalAndAverage = (numbers) => {\n  const totalSum = numbers.reduce((acc, curr) => acc + curr, 0);\n  const averageValue = Math.round(totalSum / numbers.length);\n\n  return { total: totalSum, average: averageValue };\n};\n\nconst formatNumber = (number) =>\n  number.toLocaleString('en-US', { maximumFractionDigits: 0 });\n\nconst updateTextContent = (selector, value) => {\n  const element = document.querySelector(selector);\n\n  if (element) {\n    element.textContent = value;\n  }\n};\n\nconst populationNumbers = Array.from(document.querySelectorAll('.population'))\n  .map((el) => el.textContent)\n  .map(parsePopulation);\n\nconst { total, average } = calculateTotalAndAverage(populationNumbers);\n\nupdateTextContent('.total-population', formatNumber(total));\nupdateTextContent('.average-population', formatNumber(average));\n"],"names":["numbers","totalSum","averageValue","formatNumber","number","toLocaleString","maximumFractionDigits","updateTextContent","selector","value","element","document","querySelector","textContent","_calculateTotalAndAverage","Math","round","Array","from","querySelectorAll","map","el","text","test","replace","trim","parseInt","reduce","acc","curr","length","total","average"],"version":3,"file":"index.4b95c0a2.js.map"}